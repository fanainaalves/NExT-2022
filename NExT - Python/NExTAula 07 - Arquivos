{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Ao9Nts0S6eaXav5VSdDUDQVSpwgCynK9","timestamp":1663692053436}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"tRvcy-qw7juT"},"source":["<img src=\"https://www.cesar.school/wp-content/uploads/2019/09/marca_cesar_school.png\" alt=\"drawing\" width=\"200\"/>\n","\n","# üêç Python - **Aula 07**\n","\n","---\n","\n","- Arquivos"]},{"cell_type":"markdown","metadata":{"id":"AlSkSWbbvaY-"},"source":["# üìÑ Arquivos\n","\n","Uma das formas mais populares e eficientes de manter informa√ß√µes salvas √© armazenando os dados em **arquivos**.\n","\n","Arquivos tamb√©m s√£o fontes de entradas de dados para os sistemas, onde esses dados podem ter sido coletados e processados inicialmente por um programa, e lidos e manipulados por outro.\n","\n","Em Python temos uma s√©rie de recursos nativos para escrita e leitura de arquivos.\n","\n","De forma geral, podemos dizer que existem dois tipos de arquivo:\n","- Arquivos de texto (`.txt`, `.py`, `.html`, `.md`)\n","- Arquivos bin√°rios (`.docx`, `.pdf`, `.jpeg`, `.mp3`)\n","\n","> üí° Habilite no seu sistema a exibi√ß√£o das **exten√ß√µes de nomes de arquivos**. Isso ajuda a visualizar qual o formato do arquivo.\n","\n","Aqui no Colab, podemos usar um \"[comando m√°gico](https://ipython.readthedocs.io/en/stable/interactive/magics.html#cellmagic-writefile)\" para criar arquivos diretamente de uma c√©lula de c√≥digo:"]},{"cell_type":"code","metadata":{"id":"lvcgwsQ8JCcn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663626181457,"user_tz":180,"elapsed":591,"user":{"displayName":"Erick Sim√µes de Matos","userId":"18093628126646893557"}},"outputId":"1fef63bc-c1bb-4618-ee91-71f91a52b4b9"},"source":["%%writefile monty_python_song.txt\n","Some things in life are bad\n","They can really make you mad\n","Other things just make you swear and curse\n","When you're chewing on life's gristle\n","Don't grumble, give a whistle\n","And this'll help things turn out for the best\n","And...\n","\n","Always look on the bright side of life\n","Always look on the light side of life"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Writing monty_python_song.txt\n"]}]},{"cell_type":"markdown","source":["> ‚ö†Ô∏è No Colab, os arquivos ficam dispon√≠veis apenas durante o tempo de execu√ß√£o da m√°quina virtual, ou seja, quando esse Colab for desconectado, os arquivos criados v√£o ser perdidos. Poss√≠vel solu√ß√µes:\n","- Usar arquivos dentro do Drive;\n","- Baixar os arquivos para sua m√°quina local.\n","\n"],"metadata":{"id":"RZLPFUEJDBXv"}},{"cell_type":"markdown","metadata":{"id":"fdMr3-y0vpy7"},"source":["## üìö Modos de abertura de arquivo\n","\n","Por padr√£o, os arquivos s√£o abertos no modo de leitura, mas existem v√°rios outros modos poss√≠veis:\n","\n","|   Modo  | Sintaxe | Cursor | Descri√ß√£o |\n","|---------|-----------|-|-|\n","|**Read**|**`'r'`**|In√≠cio|**Padr√£o**. Abre o arquivo apenas para leitura. Se o arquivo n√£o existir, lan√ßa um erro `FileNotFoundError`|\n","|Read and Write|`'r+'`|In√≠cio|Abre o arquivo para leitura e escrita. Se o arquivo n√£o existir, lan√ßa um erro `FileNotFoundError`|\n","|Write|`'w'`|In√≠cio|Abre o arquivo para escrita, sobrescrevendo o conte√∫do original. Se o arquivo n√£o existir, ser√° criado|\n","|Append|`'a'`|Final|Abre o arquivo para escrita. Se o arquivo n√£o existir, ser√° criado.|"]},{"cell_type":"markdown","source":["### üóíÔ∏è Leitura\n","\n","O primeiro passo para ler um arquivo √© abri-lo. Para isso, usamos a fun√ß√£o `open()`:\n","\n","```python\n","arquivo = open('nomedoarquivo.txt')\n","```\n","\n","Se for necess√°rio mudar o modo de abertura, esse par√¢metro √© passado depois do nome do arquivo:\n","\n","```python\n","arquivo = open('nomedoarquivo.txt', 'a')\n","```\n","\n","A fun√ß√£o `open()` retorna uma refer√™ncia a um arquivo que pode ser manipulado com fun√ß√µes pr√≥prias.\n","\n","> üí° Documenta√ß√£o da fun√ß√£o `open` [aqui](https://docs.python.org/3/library/functions.html#open)"],"metadata":{"id":"cKzamYuMLhaN"}},{"cell_type":"code","metadata":{"id":"VjTFPmmGvsK8"},"source":["arq = open('monty_python_song.txt', 'r')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Oq_6oiZ6vv9z"},"source":["#### ü™ß M√©todos de leitura\n","\n","Os dados extra√≠dos do arquivo geralmente s√£o respresentados como strings.\n","\n","- #### `arq.read()`\n","Retorna um `str` com todo o conte√∫do do arquivo.\n","```python\n","conteudo = arq.read()\n","```\n","\n","- #### `arq.readline()`\n","Retorna um `str` com o conte√∫do de uma linha do arquivo. Para cada vez que esse comando √© executado, uma nova linha √© retornada.\n","```python\n","conteudo = arq.readline()\n","```\n","\n","- #### `arq.readlines()`\n","Retorna um `list` onde cada elemento da lista √© uma linha do arquivo em `str`.\n","```python\n","conteudo = arq.readlines()\n","```\n","\n","- #### `arq.seek()`\n","Move o cursos para a posi√ß√£o de um caracter espec√≠fico.\n","```python\n","arquivo.seek(0)\n","```"]},{"cell_type":"code","metadata":{"id":"PMSSQrEyvx7y","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663627165972,"user_tz":180,"elapsed":400,"user":{"displayName":"Erick Sim√µes de Matos","userId":"18093628126646893557"}},"outputId":"984d7cdf-f05e-4415-9459-044136ca8653"},"source":["arq = open('exemplo.omena')\n","\n","print(arq.read())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["lu\n","lu omena\n","omena\n","amiga da santiago\n","\n"]}]},{"cell_type":"code","source":["arq = open('exemplo.omena')\n","\n","print(arq.readline())\n","print(arq.readline())\n","print(arq.readline())\n","print(arq.readline())\n","arq.seek(3) # move o arquivo para a posi√ß√£o do caracter 3\n","print(arq.readline())\n","print(arq.readline())\n","print(arq.readline())\n","print(arq.readline())\n","print(arq.readline())\n","print(arq.readline())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"12S5twpg7_Fi","executionInfo":{"status":"ok","timestamp":1663629133191,"user_tz":180,"elapsed":2,"user":{"displayName":"Erick Sim√µes de Matos","userId":"18093628126646893557"}},"outputId":"8cea0f22-d8ef-4aaa-d34d-4496ac191413"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["lu\n","\n","lu omena\n","\n","omena\n","\n","amiga da santiago\n","\n","\n","\n","lu omena\n","\n","omena\n","\n","amiga da santiago\n","\n","\n","\n"]}]},{"cell_type":"code","source":["arq = open('exemplo.omena')\n","\n","linhas = arq.readlines()\n","\n","print(linhas[-1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WiUrgWw5-k36","executionInfo":{"status":"ok","timestamp":1663628583961,"user_tz":180,"elapsed":3,"user":{"displayName":"Erick Sim√µes de Matos","userId":"18093628126646893557"}},"outputId":"9b6a9b53-fe75-4b54-83aa-d61fc9ba46f4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["amiga da santiago\n","\n"]}]},{"cell_type":"markdown","source":["Esses m√©todos podem ser usados em conjunto com o `for`:\n","\n","```python\n","arquivo = open('nomedoarquivo.txt', 'r')\n","for linha in arquivo:\n","  print(linha)\n","```"],"metadata":{"id":"SQg4SAldQS75"}},{"cell_type":"code","source":["convidados = open('lista_convidados.txt', 'r')\n","\n","print(convidados.readlines())\n","\n","convidados.seek(0)\n","\n","for pessoa in convidados:\n","  print(pessoa.strip())\n","  if 'ana' == pessoa.strip():\n","    print('Pessoa encontrada ü§ü')\n"],"metadata":{"id":"YfR6rAytQPYt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663630130446,"user_tz":180,"elapsed":4,"user":{"displayName":"Erick Sim√µes de Matos","userId":"18093628126646893557"}},"outputId":"5de6e512-1a9d-4a61-9479-7668b0b96294"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['fabr√≠cio\\n', 'omena\\n', 'ana\\n', 'nico\\n', 'vieira\\n', 'patrick\\n', 'padilha\\n', 'fernandes\\n', 'banana\\n']\n","fabr√≠cio\n","omena\n","ana\n","Pessoa encontrada ü§ü\n","nico\n","vieira\n","patrick\n","padilha\n","fernandes\n","banana\n"]}]},{"cell_type":"markdown","metadata":{"id":"RXKTLT0kvzxz"},"source":["### üìù Escrita\n","\n","Para escrever em um arquivo, √© necess√°rio usar um modo que habilite isso, como `w`, `r+` ou `a`:\n","\n","```python\n","arquivo = open('nomearquivo.txt', 'w')\n","arquivo.write('cachorro,terrestre\\n')\n","arquivo.write('le√£o,terrestre\\n')\n","arquivo.write('pato,a√©reo\\n')\n","```\n","\n","Sempre que um arquivo √© lido, √© boa pr√°tica fecha-lo. Caso o conte√∫do dele tenha sido manipulado, as modifica√ß√µes s√≥ seram gravadas em *disco* quando o m√©todo `.close()` for alcan√ßado.\n","\n","```python\n","arquivo.close()\n","```\n"]},{"cell_type":"markdown","source":["#### ü™ß M√©todos de escrita\n","\n","Para escrever em um arquivo, podemos usar dois m√©todos:\n","\n","- #### `arq.write(conte√∫do)`\n","\n","  Escreve o conte√∫do em `str` passado como argumento para o arquivo.\n","  \n","  ```python\n","  arquivo = open('nomearquivo.txt', 'a')\n","  arquivo.write('chimpanz√©,terrestre\\n')\n","  arquivo.write('elefante,terrestre\\n')\n","  arquivo.close()\n","  ```\n","\n","- #### `arq.writelines(lista)`\n","\n","  Escreve um `list` de `str` passado como argumento para o arquivo.\n","  \n","  ```python\n","  arquivo = open('nomearquivo.txt', 'a')\n","  lista = ['ovos\\n', 'bacon\\n', 'Spam\\n']\n","  arquivo.writelines(lista)\n","  arquivo.close()\n","  ```"],"metadata":{"id":"jPP_-MuISLyk"}},{"cell_type":"code","metadata":{"id":"JVVlPiDfv1nN"},"source":["# write\n","\n","arq = open('lista_de_compras.txt', 'w')\n","\n","arq.write('bacon\\n')\n","arq.write('ovos\\n')\n","arq.write('spam\\n')\n","arq.write('suco\\n')\n","\n","arq.close()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"B3cLK0hiv59J","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663631739715,"user_tz":180,"elapsed":389,"user":{"displayName":"Erick Sim√µes de Matos","userId":"18093628126646893557"}},"outputId":"8235d371-bd89-444d-f44f-359858a1354e"},"source":["# writelines\n","\n","produtos = ['bacon', 'ovos', 'spam', 'suco']\n","\n","arq = open('lista_de_compras.txt', 'w')\n","\n","print('ü™®'.join(produtos))\n","arq.writelines('\\n'.join(produtos))\n","\n","arq.close()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["baconü™®ovosü™®spamü™®suco\n"]}]},{"cell_type":"markdown","metadata":{"id":"M6CEWMR4v8cT"},"source":["### üìã Comando `with`\n","\n","O comando `with` √© usado para facilitar a manipula√ß√£o de qualquer estrutura que precise ser finalizada. Geralmente √© usado associado a leitura e escrita de arquivos.\n","\n","Principais vantagens:\n","- Sintaxe mais limpa para a leitura de arquivos;\n","- Abre e fecha o arquivo automaticamente;\n","- Permite trabalhar com v√°rios arquivos simult√¢neamente.\n","\n","```python\n","with open('arquivo.txt') as arquivo:\n","  print(arquivo.readline())\n","  print(arquivo.readline())\n","```\n","\n"]},{"cell_type":"code","metadata":{"id":"7u0IJyphv-aB"},"source":["with open('exemplo.omena', 'a') as arquivo:\n","  arquivo.write('suassuna\\n')\n","  arquivo.write('lumena\\n')\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"z1z5Wv98Psc_"},"source":["# üß± Exerc√≠cios Fundamentais"]},{"cell_type":"markdown","metadata":{"id":"eZ_OlH8owCAC"},"source":["1. Crie um arquivo que contenha, em cada linha, o nome de um animal e seu habitat, separado por v√≠rgula, como no exemplo:\n","```\n","baleira,aqu√°tico\n","tucano,a√©reo\n","tubar√£o,aqu√°tico\n","coelho,terrestre\n","```\n","\n","  Em seguida, fa√ßa um programa que leia o arquivo e exiba apenas o nome dos animais terrestres.\n","\n","  > üéñÔ∏è *B√¥nus: pe√ßa ao usu√°rio que informe o habitat.*\n"]},{"cell_type":"code","metadata":{"id":"ftHZ1zjpwDLQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663637041065,"user_tz":180,"elapsed":3287,"user":{"displayName":"Erick Sim√µes de Matos","userId":"18093628126646893557"}},"outputId":"72a85ca3-8683-45bc-dac3-6e38809f3a14"},"source":["habitat = input('Informe o habitat: ').lower()\n","\n","with open('animais.txt') as arq:\n","  for linha in arq:\n","    if habitat in linha:\n","      print(linha[:-(len(habitat) + 2)])\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Informe o habitat: a√©reo\n","tucano\n","pato\n"]}]},{"cell_type":"markdown","source":["2. Implemente um programa que leia o arquivo da quest√£o anterior e gere um novo arquivo apenas com os animais terrestres."],"metadata":{"id":"ExFW40IBbty9"}},{"cell_type":"code","source":["with open('animais.txt') as animais, open('terrestres.txt', 'w') as terrestres:\n","  for linha in animais:\n","    if 'terrestre' in linha:\n","      terrestres.write(linha[:-11]+'\\n')\n"],"metadata":{"id":"FrgVnbtffvk3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5wUzG4G_wF6x"},"source":["3. Crie um programa que registra as 4 notas de uma pessoa na escola (como o boletim) em um arquivo. Em seguida, leia todos os valores para imprimir o **menor** valor, o **maior** e a **m√©dia**.\n","\n","> üí° Dica: Se voc√™ usar listas, pode usar as fun√ß√µes `min()` e `max()`."]},{"cell_type":"code","metadata":{"id":"INq_IgoNwHTX"},"source":["with open('notas.txt', 'w') as notas:\n","  for _ in range(4):\n","    notas.write(f'{input(\"Insira a nota: \")}\\n')\n","\n","with open('notas.txt') as notas:\n","  result = []\n","  for linha in notas:\n","    result.append(int(linha))\n","  print(f'A maior nota √© {max(result)}')\n","  print(f'A menor nota √© {min(result)}')\n","  print(f'A m√©dia nota √© {sum(result)/len(result)}')\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# üßó‚Äç‚ôÄÔ∏è Desafio\n","\n","‚ö†Ô∏è Esses exerc√≠cios s√£o baseados em entrevistas de avalia√ß√£o t√©cnica de emprego. Ao escrever o c√≥digo, recomendamos que foquem na legibilidade, uso de boas pr√°ticas de programa√ß√£o e recursos adequatdos √† situa√ß√£o.\n","\n","## Dicas e considera√ß√µes\n","\n","* Esse √© um desafio moldado para testar suas habilidades desenvolvidas at√© agora, mas tamb√©m para estimular a pesquisa e o racioc√≠nio l√≥gio.\n","\n","* Como voc√™ descobrir√°, para alguns desses desafios, os conjuntos de dados s√£o bastante grandes. Isso foi feito propositalmente, pois mostra um dos limites da an√°lise baseada em Python. Embora nosso primeiro instinto, como analistas de dados, muitas vezes seja ir direto para o Excel, a cria√ß√£o de scripts em Python pode nos fornecer op√ß√µes mais robustas para lidar com \"big data\".\n","\n","* Seus scripts devem funcionar para cada conjunto de dados fornecido. Execute seu script para cada conjunto de dados separadamente para garantir que o c√≥digo funcione para dados diferentes.\n","\n","* Sinta-se encorajado a trabalhar em grupos, mas n√£o se engane copiando o trabalho de outra pessoa. Voc√™ consegue o que investe, e a arte da programa√ß√£o √© extremamente implac√°vel para os moochers. Construa seu pr√≥prio conhecimento, queime os neur√¥nios e aprenda isso enquanto voc√™ pode! Essas s√£o habilidades que render√£o bons ganhos em sua carreira futura.\n","\n","* Comece cedo e pe√ßa ajuda com frequ√™ncia! Desafie-se a identificar perguntas _espec√≠ficas_ para seus monitores. N√£o se resigne a simplesmente dizer: \"Estou totalmente perdido\". Venha preparado para mostrar seu esfor√ßo e padr√µes de pensamento, ficaremos felizes em ajudar ao longo do caminho.\n","\n","* Sempre comprometa seu trabalho e fa√ßa backups constantes (salve). Voc√™ n√£o quer perder horas de seu trabalho porque n√£o salvou o seu projeto a cada meia hora ou algo assim."],"metadata":{"id":"Xx586oT2Yr5r"}},{"cell_type":"markdown","source":["## üí∏ PyFinanceiro\n","\n","* Neste desafio, voc√™ tem a tarefa de criar um script Python para analisar os registros financeiros de sua empresa. Voc√™ fornecer√° um conjunto de dados financeiros chamado [dados_financeiros.txt](https://drive.google.com/file/d/1g4A0DkMdGxwv9JSGO32DYqvPby45pIHG/view?usp=sharing). O conjunto de dados √© composto por duas colunas: `Data` e `Lucros/Perdas`, separados por virgula. (Felizmente, sua empresa tem padr√µes bastante flex√≠veis para a contabilidade, ent√£o os registros s√£o simples.)\n","\n","* Sua tarefa √© criar um script Python que analise os registros para calcular cada um das seguintes informa√ß√µes:\n","\n","  * O n√∫mero total de meses inclu√≠dos no conjunto de dados\n","\n","  * O valor total l√≠quido de \"Lucros / Perdas\" durante todo o per√≠odo\n","\n","  * A m√©dia dos \"Lucros / Perdas\" durante todo o per√≠odo\n","\n","  * A m√©dia das mudan√ßas em \"Lucros / Perdas\" durante todo o per√≠odo\n","\n","  * O maior aumento nos lucros (data e valor) durante todo o per√≠odo\n","\n","  * A maior redu√ß√£o nas perdas (data e valor) ao longo de todo o per√≠odo\n","\n","* Por exemplo, sua an√°lise deve ser semelhante a esta abaixo:\n","\n","``` text\n","Analise financeira\n","----------------------------\n","Total de meses: 86\n","Total: $ 38382578\n","M√©dia: $ 446309,04\n","Varia√ß√£o da m√©dia: $ -2315,12\n","Maior aumento nos lucros: fevereiro de 2012 ($ 1926159)\n","Maior redu√ß√£o nos lucros: setembro de 2013 ($ -2196167)\n","```\n","\n","* Al√©m disso, seu script final deve imprimir a an√°lise no terminal e exportar um arquivo de texto `relat√≥rio.txt` com os resultados."],"metadata":{"id":"HQaZBXlyeddv"}},{"cell_type":"code","source":["data = []\n","lp = []\n","# armazena a data em um vetor e o lucro/preju√≠zo em outro\n","with open('dados_financeiros.txt') as dados:\n","  for line in dados.readlines()[1:]:\n","    data.append(line.split(',')[0])\n","    lp.append(int(line.split(',')[1]))\n","\n","variacao = []\n","i = 0\n","# calcula as varia√ß√µes entre os meses\n","while i < len(lp) - 1:\n","  variacao.append(lp[i+1] - lp[i])\n","  i += 1\n","\n","total_meses = len(data)\n","total = sum(lp)\n","\n","# arquivo de sa√≠da\n","with open('financeiro_resultado.txt', 'w') as result:\n","  result.write('Analise financeira\\n')\n","  result.write('-' * 28 + '\\n')\n","  result.write(f'Total de meses: {total_meses}\\n')\n","  result.write(f'Total: $ {total}\\n')\n","  result.write(f'M√©dia: $ {total/total_meses:.2f}\\n')\n","  result.write(f'Varia√ß√£o da m√©dia: $ {sum(variacao)/len(variacao):.2f}\\n')\n","  result.write(f'Maior aumento nos lucros: {data[variacao.index(max(variacao)) + 1]} ($ {max(variacao)})\\n')\n","  result.write(f'Maior redu√ß√£o nos lucros: {data[variacao.index(min(variacao)) + 1]} ($ {min(variacao)})\\n')\n"],"metadata":{"id":"vCHstbtUeiXo"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## üó≥Ô∏è PyVota√ß√£o\n","\n","* Neste desafio, voc√™ tem a tarefa de ajudar uma pequena cidade rural a modernizar seu processo de contagem de votos. (At√© agora, o tio Cleiton vinha contando-os um por um com confian√ßa, mas, infelizmente, sua concentra√ß√£o n√£o √© o que costumava ser.)\n","\n","* Voc√™ receber√° um conjunto de dados de enquete chamado [dados_ele√ß√£o.txt](https://drive.google.com/file/d/13tarkZMlfvMcHnS8K49pdF-GMYOwgggg/view?usp=sharing). O conjunto de dados √© composto por tr√™s colunas: `ID do eleitor`,` Munic√≠pio` e `Candidato`. Sua tarefa √© criar um script Python que analise os votos e calcule cada uma das seguintes informa√ß√µes:\n","\n","  * O n√∫mero total de votos expressos\n","\n","  * Uma lista completa de candidatos que receberam votos\n","\n","  * A porcentagem de votos que cada candidato ganhou\n","\n","  * O n√∫mero total de votos que cada candidato ganhou\n","\n","  * O vencedor da elei√ß√£o com base no voto popular.\n","\n","* Por exemplo, sua an√°lise deve ser semelhante a esta abaixo:\n","\n","  ```text\n","  Resultados eleitorais\n","  -------------------------\n","  Total de votos: 3521001\n","  -------------------------\n","  Khan: 63.0% (2218231)\n","  Correy: 20.0% (704200)\n","  Li: 14.0% (492940)\n","  O'Tooley: 3.0% (105630)\n","  -------------------------\n","  Vencedor: Khan\n","  -------------------------\n","  ```\n","\n","* Al√©m disso, seu script final deve imprimir a an√°lise no terminal e exportar um arquivo de texto `resultado.txt` com os resultados."],"metadata":{"id":"OOh5TFKVepBW"}},{"cell_type":"code","source":["votos = []\n","# cria uma lista apenas com os candidados que receberam votos\n","with open('dados_elecao.txt') as dados:\n","  for linha in dados.readlines()[1:]:\n","    #print(linha)\n","    votos.append(linha.split(',')[2].replace('\\n', ''))\n","\n","candidatos = set(votos) # cria um set, com o nome de cada candidato uma vez\n","cand_voto = dict()\n","# cria um dicion√°rio com 'nome candidato' x 'quantidade votos'\n","for candidato in candidatos:\n","  cand_voto[candidato] = votos.count(candidato)\n","\n","# organiza o dicion√°rio usando uma fun√ß√£o persolanizada\n","# P.S.: confira um material extra na pr√≥xima cela\n","cand_voto = sorted(cand_voto.items(), key=lambda x:x[1], reverse=True)\n","\n","# cria o arquivo com os resultados\n","with open('eleicao_resultado.txt', 'w') as result:\n","  result.write('Resultados eleitorais\\n')\n","  result.write('-' * 25 + '\\n')\n","  result.write(f'Total de votos: {len(votos)}\\n')\n","  result.write('-' * 25 + '\\n')\n","  for cand in cand_voto:\n","    result.write(f'{cand[0]}: {(cand[1] * 100)/len(votos):.1f}% ({cand[1]})\\n')\n","  result.write('-' * 25 + '\\n')\n","  result.write(f'Vencedor: {cand_voto[0][0]}\\n')\n","  result.write('-' * 25 + '\\n')\n"],"metadata":{"id":"TVjTBI-oevW2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### üèÉüí® Conte√∫do de Apoio\n","\n","Para tratar alguns dados, pode ser interessantes adotar o uso de dicion√°rios (conte√∫do que ser√° abordado nas pr√≥ximas aulas). Se voc√™ puder, sugerimos a leitura dos seguintes artigos:\n","\n","- https://careerkarma.com/blog/python-sort-a-dictionary-by-value/\n","- https://careerkarma.com/blog/python-sort/\n","\n","Obs.: A fun√ß√£o `sorted()`, por padr√£o, organiza uma lista por ordem alfab√©tica, mas isso pode ser personalizado usando o par√¢metro `key`. No caso, usei tamb√©m fun√ß√µes `lambda`, que √© um recurso avan√ßado da linguagem.\n","\n","Fun√ß√µes lambda s√£o fun√ß√µes que n√£o s√£o definidias (usando o `def`, por exemplo), mas s√£o escritas diretamente de onde s√£o executadas.\n","\n","Para o caso do sorted, expecificamente, seria poss√≠vel fazer da sequinte forma:\n","\n","```python\n","def ordena(d):\n","  return d[1]\n","\n","cand_voto = sorted(cand_voto.items(), key=ordena, reverse=True)\n","```\n","\n","Para entender mais sobre fun√ß√µes lambda, recomendo a leitura desses materiais:\n","- https://www.hashtagtreinamentos.com/funcoes-lambda-python\n","- https://www.guru99.com/python-lambda-function.html"],"metadata":{"id":"5SsvmidUe2Vm"}}]}